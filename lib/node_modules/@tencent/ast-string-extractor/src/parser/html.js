const parse5 = require('parse5');
const htmlparser2Adapter = require('parse5-htmlparser2-tree-adapter');
const { parseCode: parseScript, extractStrings: extractScriptStrings } = require('./js-ts');

function parseHtml(code) {
  const document = parse5.parse(code, {
    treeAdapter: htmlparser2Adapter.adapter,
    sourceCodeLocationInfo: true
  });

  const strings = [];

  const scriptParser = (node) => {
    const loc = node.sourceCodeLocation;
    const scriptContent = node.data.trim();
    if (!scriptContent) return;
    const scriptAst = parseScript(scriptContent, 'vue-script.js', false);
    const res = extractScriptStrings(scriptAst, false)
    // 将res中的每个结果中的startLine和endLine分别加上scriptContent的起始行列号
    res.forEach(item => {
      item.startLine += loc.startLine
      item.endLine += loc.startLine
    })
    strings.push(...res)
  }

  const walk = (node) => {
    if (node.type === 'text') {
      const isScriptContent = node.parentNode && node.parentNode.name === 'script';
      if (isScriptContent) {
        scriptParser(node)
        return;
      }

      const text = node.data.trim();
      if (text) {
        const loc = node.sourceCodeLocation;
        strings.push({
          text: text,
          // raw: text,
          startLine: loc.startLine,
          startCol: loc.startCol,
          endLine: loc.endLine,
          endCol: loc.endCol
        });
      }
    } else if (node.attribs) {
      Object.values(node.attribs).forEach(value => {
        // 只提取title属性的值和行号
        if (node.attribs.title && value && value.trim() && node.attribs.title==value) {
          strings.push({
            text: value,
            // raw: value,
            startLine: node.sourceCodeLocation.attrs.title.startLine,
            startCol: node.sourceCodeLocation.attrs.title.startCol,
            endLine: node.sourceCodeLocation.attrs.title.endLine,
            endCol: node.sourceCodeLocation.attrs.title.endCol
          });
        }
      });
    }
    if (node.children) node.children.forEach(walk);
  };

  walk(document);
  return strings;
}

module.exports = { parseHtml };
